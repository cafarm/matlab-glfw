From 10a0c05ae66a6b104246262c40813ac05b32a0a5 Mon Sep 17 00:00:00 2001
From: Mark Cafaro <mark.cafaro@gmail.com>
Date: Sun, 26 Jun 2022 09:49:06 -0400
Subject: [PATCH] Add glfwGetMonitor function

---
 include/GLFW/glfw3.h | 26 ++++++++++++++++++++++++++
 src/monitor.c        | 20 ++++++++++++++++++++
 2 files changed, 46 insertions(+)

diff --git a/include/GLFW/glfw3.h b/include/GLFW/glfw3.h
index d074de1..50ca8f5 100644
--- a/include/GLFW/glfw3.h
+++ b/include/GLFW/glfw3.h
@@ -2027,6 +2027,32 @@ GLFWAPI GLFWerrorfun glfwSetErrorCallback(GLFWerrorfun callback);
  */
 GLFWAPI GLFWmonitor** glfwGetMonitors(int* count);
 
+/*! @brief Returns a currently connected monitor.
+ *
+ *  This function returns the handle for a currently connected monitor. It is
+ *  useful for interfacing with MATLAB which does not support the multilevel
+ *  pointer returned by glfwGetMonitors. If the index is out of range, this
+ *  function returns `NULL`.
+ *
+ *  @param[in] index The index of the monitor to return.
+ *  @return The monitor, or `NULL` if the index is out of range or
+ *  if an [error](@ref error_handling) occurred.
+ *
+ *  @errors Possible errors include @ref GLFW_NOT_INITIALIZED and @ref 
+ *  GLFW_INVALID_VALUE.
+ *
+ *  @thread_safety This function must only be called from the main thread.
+ *
+ *  @sa @ref monitor_monitors
+ *  @sa @ref glfwGetPrimaryMonitor
+ *  @sa @ref glfwGetMonitors
+ *
+ *  @since Added by patch.
+ *
+ *  @ingroup monitor
+ */
+GLFWAPI GLFWmonitor* glfwGetMonitor(int index);
+
 /*! @brief Returns the primary monitor.
  *
  *  This function returns the primary monitor.  This is usually the monitor
diff --git a/src/monitor.c b/src/monitor.c
index 7341141..8fbaed0 100644
--- a/src/monitor.c
+++ b/src/monitor.c
@@ -309,6 +309,26 @@ GLFWAPI GLFWmonitor** glfwGetMonitors(int* count)
     return (GLFWmonitor**) _glfw.monitors;
 }
 
+GLFWAPI GLFWmonitor* glfwGetMonitor(int index)
+{
+    assert(index >= 0);
+
+    _GLFW_REQUIRE_INIT_OR_RETURN(NULL);
+
+    if (!_glfw.monitorCount)
+        return NULL;
+
+    if (index < 0 || index >= _glfw.monitorCount)
+    {
+        _glfwInputError(GLFW_INVALID_VALUE, 
+                        "Invalid monitor index %i",
+                        index);
+        return NULL;
+    }
+
+    return (GLFWmonitor*) _glfw.monitors[index];
+}
+
 GLFWAPI GLFWmonitor* glfwGetPrimaryMonitor(void)
 {
     _GLFW_REQUIRE_INIT_OR_RETURN(NULL);
-- 
2.32.1 (Apple Git-133)

